{
	"info": {
		"_postman_id": "577cb0d5-e80e-4c13-aa91-73921f0fb66e",
		"name": "HillelAvto-PoltavskaLuhova",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20313623"
	},
	"item": [
		{
			"name": "Registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Extract user ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"UserId\", jsonData.data.userId);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"baseUrl\",\"https://qauto.forstudy.space/api\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"natalee\",\n  \"lastName\": \"polu\",\n  \"email\": \"poltavska@gmail.com\",\n  \"password\": \"Qwerty12345\",\n  \"repeatPassword\": \"Qwerty12345\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/signup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"",
							"    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check registration of user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Check status is error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"error\");",
							"});",
							"pm.test(\"Check status is error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"User already exists\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"natalee\",\n  \"lastName\": \"polu\",\n  \"email\": \"poltavska@gmail.com\",\n  \"password\": \"Qwerty12345\",\n  \"repeatPassword\": \"Qwerty12345\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/signup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check my userId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.userId).to.eql(pm.collectionVariables.get(\"UserId\"))",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"poltavska@gmail.com\",\n  \"password\": \"Qwerty12345\",\n  \"remember\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/signin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change settings km/usd to ml/eur",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Change usd to eur\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.currency).to.eql(\"eur\");",
							"});",
							"pm.test(\"Change km to ml\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.distanceUnits).to.eql(\"ml\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"currency\": \"eur\",\n  \"distanceUnits\": \"ml\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/settings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"settings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check settings ml/eur",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Change usd to eur\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.currency).to.eql(\"eur\");",
							"});",
							"pm.test(\"Change km to ml\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.distanceUnits).to.eql(\"ml\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/settings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"settings"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change name and last name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check my userId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.userId).to.eql(pm.collectionVariables.get(\"UserId\"))",
							"});",
							"pm.test(\"Name is changed\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.name).to.eql(\"Nataliia\");",
							"});",
							"pm.test(\"Last name is changed\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.lastName).to.eql(\"PoltavskaLugova\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"Nataliia\",\n  \"lastName\": \"PoltavskaLugova\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/profile",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check new name and last name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check my userId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.userId).to.eql(pm.collectionVariables.get(\"UserId\"))",
							"});",
							"",
							"pm.test(\"Name is Nataliia\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.name).to.eql(\"Nataliia\");",
							"});",
							"pm.test(\"Last name is PoltavskaLugova\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.lastName).to.eql(\"PoltavskaLugova\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/profile/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"profile",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"",
							"pm.test(\"Garage is empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data).to.eql([]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check carBrandId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carBrandId).to.eql(1);",
							"});",
							"pm.test(\"Check carModelId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carModelId).to.eql(5);",
							"});",
							"pm.test(\"Check cars brand\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.brand).to.eql(\"Audi\");",
							"});",
							"pm.test(\"Check cars model\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.model).to.eql(\"A8\");",
							"});",
							"pm.test(\"Check cars initialMileage\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.initialMileage).to.eql(101);",
							"});",
							"",
							"pm.test(\"Extract car ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"carId\", jsonData.data.id);",
							"});",
							"pm.test(\"Extract Time\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"timeId\", jsonData.data.carCreatedAt);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"carBrandId\": 1,\n  \"carModelId\": 5,\n  \"mileage\": 101\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cars",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status is ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sign in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check my userId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.userId).to.eql(pm.collectionVariables.get(\"UserId\"))",
							"});",
							"pm.test(\"Check ml\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.distanceUnits).to.eql(\"ml\");",
							"});",
							"pm.test(\"Check eur\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.currency).to.eql(\"eur\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"poltavska@gmail.com\",\n  \"password\": \"Qwerty12345\",\n  \"remember\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/signin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check my carId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get(\"carId\"))",
							"});",
							"",
							"pm.test(\"Check carBrandId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carBrandId).to.eql(1);",
							"});",
							"pm.test(\"Check carModelId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carModelId).to.eql(5);",
							"});",
							"pm.test(\"Check initialMileage\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.initialMileage).to.eql(101);",
							"});",
							"pm.test(\"Check cars brand\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.brand).to.eql(\"Audi\");",
							"});",
							"pm.test(\"Check cars model\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.model).to.eql(\"A8\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars/{{carId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update mileage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check my carId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carId).to.eql(pm.collectionVariables.get(\"carId\"))",
							"});",
							"pm.test(\"Check my timeId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.reportedAt).to.eql(pm.collectionVariables.get(\"timeId\"))",
							"});",
							"pm.test(\"Check updated mileage\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.mileage).to.eql(138);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"carId\": {{carId}},\n  \"reportedAt\": \"{{timeId}}\",\n  \"mileage\": 138,\n  \"liters\": 11,\n  \"totalCost\": 11,\n  \"forceMileage\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/expenses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check my carId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.id).to.eql(pm.collectionVariables.get(\"carId\"))",
							"});",
							"",
							"pm.test(\"Check carBrandId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carBrandId).to.eql(1);",
							"});",
							"pm.test(\"Check carModelId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carModelId).to.eql(5);",
							"});",
							"pm.test(\"Check initialMileage\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.initialMileage).to.eql(101);",
							"});",
							"pm.test(\"Check updated mileage\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.mileage).to.eql(138);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars/{{carId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							"pm.test(\"Check my carId\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.carId).to.eql(pm.collectionVariables.get(\"carId\"))",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cars/{{carId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cars",
						"{{carId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Check status ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"ok\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "carId",
			"value": ""
		},
		{
			"key": "timeId",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "UserId",
			"value": ""
		}
	]
}
